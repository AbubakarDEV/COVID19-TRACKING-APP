{"version":3,"sources":["api/index.js","components/Charts/Charts.js","components/CountryPicker/CountryPicker.js","components/Cards/Card/Card.js","components/Cards/Cards.js","images/image.jpg","App.js","reportWebVitals.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Card/Card.module.css"],"names":["url","fetchData","country","a","changeableUrl","console","log","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","positive","death","date","dateChecked","fetchCountries","countries","name","Charts","React","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","Date","toLocaleDateString","borderColor","fill","className","styles","container","CountryPicker","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","CardComponent","cardTitle","cardSubtitle","Grid","item","xs","md","component","Card","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","toDateString","Cards","spacing","justify","infected","App","apidata","setApidata","setCountry","apidataChart","setApidataChart","getdata","fetchdata","image","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ce8f80ab.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl=`${url}/countries/${country}`\r\n  }\r\n  console.log(country)\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n\r\n// Instead of Global, it fetches the daily data for the US\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\r\n\r\n    return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from \"./Charts.module.css\";\r\nimport { fetchDailyData } from \"../../api/index\";\r\n\r\nfunction Charts({ data: { confirmed, recovered, deaths }, country }) {\r\n  const [dailyData, setDailyData] = React.useState({});\r\n  // console.log(\"iside chart\",data,\" \",country)\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  // console.log(\"inside charts\",country)\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.recovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Charts;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport {fetchCountries  } from \"../../api/index\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nfunction CountryPicker({handleCountryChange}) {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n// import cx from 'classnames';\r\nimport styles from \"./Card.module.css\";\r\n\r\nfunction CardComponent({ className, cardTitle, value, lastUpdate, cardSubtitle }) {\r\n\r\n  return (\r\n    <Grid item xs={12} md={3} component={Card} className={(styles.card, className)}>\r\n    <CardContent>\r\n      <Typography color=\"textSecondary\" gutterBottom>\r\n        {cardTitle}\r\n      </Typography>\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        <CountUp start={0} end={value} duration={2} separator=\",\" />\r\n      </Typography>\r\n      <Typography color=\"textSecondary\">\r\n        {new Date(lastUpdate).toDateString()}\r\n      </Typography>\r\n      <Typography variant=\"h6\" component=\"p\">\r\n        {cardSubtitle}\r\n      </Typography>\r\n    </CardContent>\r\n  </Grid>\r\n  );\r\n}\r\n\r\nexport default CardComponent;","import React, { useEffect } from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport styles from \"./Cards.module.css\";\r\nimport CardComponent from \"./Card/Card\";\r\n\r\nfunction Cards({ data: { confirmed, recovered, deaths, lastUpdate } }) {\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  // console.log(\"inside card\", props)\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {/* <Typography gutterBottom variant=\"h4\" component=\"h2\">Global</Typography> */}\r\n      <Grid container spacing={4} justify=\"space-around\">\r\n        <CardComponent\r\n          className={styles.infected}\r\n          cardTitle=\"Infected\"\r\n          value={confirmed.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of active cases from COVID-19.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.recovered}\r\n          cardTitle=\"Recovered\"\r\n          value={recovered.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of recoveries from COVID-19.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.deaths}\r\n          cardTitle=\"Deaths\"\r\n          value={deaths.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of deaths caused by COVID-19.\"\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;","export default __webpack_public_path__ + \"static/media/image.2df354ce.jpg\";","import React, { useEffect } from 'react';\nimport styles from \"./App.module.css\";\nimport { Cards, Charts, CountryPicker } from \"./components\";\nimport { fetchData } from \"./api\";\nimport image from './images/image.jpg';\nfunction App() {\n  const [apidata,setApidata]=React.useState(\"\")\n  const [country,setCountry]=React.useState(\"\")\n  const [apidataChart,setApidataChart]=React.useState(\"\")\n\n  const getdata =async () => {\n    const data =await fetchData();\n    setApidata(data)\n  }\n  useEffect(() => {\n    getdata()\n  },[])\n  const handleCountryChange=async(country)=>{\n    // console.log(country)\n    const fetchdata =await fetchData(country);\n    // console.log(fetchdata)\n    // setApidata(fetchdata,country)\n    setCountry(country)\n    setApidataChart(fetchdata)\n    \n  }\n  return (\n    <div className={styles.container}>\n      <img className={styles.image} src={image} alt=\"COVID-19\" />\n      <Cards data={apidata} />\n      <CountryPicker handleCountryChange={handleCountryChange} />\n      <Charts data={apidataChart} country={country}/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__Ct7Qm\",\"infected\":\"Cards_infected__3Ff80\",\"recovered\":\"Cards_recovered__1QEL1\",\"deaths\":\"Cards_deaths__2ITzU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1uF5N\",\"image\":\"App_image__3ExEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__pYyiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1OoHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2l3qZ\"};"],"sourceRoot":""}